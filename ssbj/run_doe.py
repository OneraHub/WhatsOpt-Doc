# -*- coding: utf-8 -*-
"""
  run_doe.py generated by WhatsOpt. 
"""
# DO NOT EDIT unless you know what you are doing
# analysis_id: 124

import numpy as np
# import matplotlib
# matplotlib.use('Agg')
import matplotlib.pyplot as plt
from openmdao.api import Problem, SqliteRecorder, CaseReader
from whatsopt.smt_doe_driver import SmtDoeDriver
from ssbj import Ssbj 

from optparse import OptionParser
parser = OptionParser()
parser.add_option("-b", "--batch",
                  action="store_true", dest="batch", default=False,
                  help="do not plot anything")
(options, args) = parser.parse_args()

pb = Problem(Ssbj())
pb.driver = SmtDoeDriver(sampling_method='LHS', n_cases=50)
case_recorder_filename = 'ssbj_doe.sqlite'        
recorder = SqliteRecorder(case_recorder_filename)
pb.driver.add_recorder(recorder)
pb.model.add_recorder(recorder)
pb.model.nonlinear_solver.add_recorder(recorder)


pb.model.add_design_var('x_aer', lower=0.75, upper=1.25)
pb.model.add_design_var('z', lower=[0.2, 0.666, 0.875, 0.45, 0.72, 0.5], upper=[1.8, 1.333, 1.125, 1.45, 1.27, 1.5])
pb.model.add_design_var('x_pro', lower=0.18, upper=1.81)
pb.model.add_design_var('x_str', lower=[0.4, 0.75], upper=[1.6, 1.25])


pb.model.add_objective('R', scaler=-1.)

pb.model.add_constraint('con1_esf', upper=0.)
pb.model.add_constraint('con2_esf', upper=0.)
pb.model.add_constraint('con_dpdx', upper=0.)
pb.model.add_constraint('con_dt', upper=0.)
pb.model.add_constraint('con_sigma1', upper=0.)
pb.model.add_constraint('con_sigma2', upper=0.)
pb.model.add_constraint('con_sigma3', upper=0.)
pb.model.add_constraint('con_sigma4', upper=0.)
pb.model.add_constraint('con_sigma5', upper=0.)
pb.model.add_constraint('con_temp', upper=0.)
pb.model.add_constraint('con_theta_low', upper=0.)
pb.model.add_constraint('con_theta_up', upper=0.)

pb.setup()  
pb.run_driver()        

if options.batch:
    exit(0)
reader = CaseReader(case_recorder_filename)
cases = reader.system_cases.list_cases()
n = len(cases)
data = {'inputs': {}, 'outputs': {} }

data['inputs']['x_aer'] = np.zeros((n,)+(1,))
data['inputs']['z'] = np.zeros((n,)+(6,))
data['inputs']['x_pro'] = np.zeros((n,)+(1,))
data['inputs']['x_str'] = np.zeros((n,)+(2,))

data['outputs']['R'] = np.zeros((n,)+(1,))
data['outputs']['con1_esf'] = np.zeros((n,)+(1,))
data['outputs']['con2_esf'] = np.zeros((n,)+(1,))
data['outputs']['con_dpdx'] = np.zeros((n,)+(1,))
data['outputs']['con_dt'] = np.zeros((n,)+(1,))
data['outputs']['con_sigma1'] = np.zeros((n,)+(1,))
data['outputs']['con_sigma2'] = np.zeros((n,)+(1,))
data['outputs']['con_sigma3'] = np.zeros((n,)+(1,))
data['outputs']['con_sigma4'] = np.zeros((n,)+(1,))
data['outputs']['con_sigma5'] = np.zeros((n,)+(1,))
data['outputs']['con_temp'] = np.zeros((n,)+(1,))
data['outputs']['con_theta_low'] = np.zeros((n,)+(1,))
data['outputs']['con_theta_up'] = np.zeros((n,)+(1,))

for i, case_id in enumerate(cases):
    case = reader.system_cases.get_case(case_id)
    data['inputs']['x_aer'][i,:] = case.inputs['x_aer']
    data['inputs']['z'][i,:] = case.inputs['z']
    data['inputs']['x_pro'][i,:] = case.inputs['x_pro']
    data['inputs']['x_str'][i,:] = case.inputs['x_str']
    data['outputs']['R'][i,:] = case.outputs['R']
    data['outputs']['con1_esf'][i,:] = case.outputs['con1_esf']
    data['outputs']['con2_esf'][i,:] = case.outputs['con2_esf']
    data['outputs']['con_dpdx'][i,:] = case.outputs['con_dpdx']
    data['outputs']['con_dt'][i,:] = case.outputs['con_dt']
    data['outputs']['con_sigma1'][i,:] = case.outputs['con_sigma1']
    data['outputs']['con_sigma2'][i,:] = case.outputs['con_sigma2']
    data['outputs']['con_sigma3'][i,:] = case.outputs['con_sigma3']
    data['outputs']['con_sigma4'][i,:] = case.outputs['con_sigma4']
    data['outputs']['con_sigma5'][i,:] = case.outputs['con_sigma5']
    data['outputs']['con_temp'][i,:] = case.outputs['con_temp']
    data['outputs']['con_theta_low'][i,:] = case.outputs['con_theta_low']
    data['outputs']['con_theta_up'][i,:] = case.outputs['con_theta_up']
      

output = data['outputs']['R'].reshape(-1)

input = data['inputs']['x_aer'].reshape(-1)
plt.subplot(13, 10, 1)
plt.plot(input[0::1], output[0::1], '.')
plt.ylabel('R')
plt.xlabel('x_aer')

input = data['inputs']['z'].reshape(-1)
plt.subplot(13, 10, 2)
plt.plot(input[0::6], output[0::1], '.')
plt.xlabel('z 0')
plt.subplot(13, 10, 3)
plt.plot(input[1::6], output[0::1], '.')
plt.xlabel('z 1')
plt.subplot(13, 10, 4)
plt.plot(input[2::6], output[0::1], '.')
plt.xlabel('z 2')
plt.subplot(13, 10, 5)
plt.plot(input[3::6], output[0::1], '.')
plt.xlabel('z 3')
plt.subplot(13, 10, 6)
plt.plot(input[4::6], output[0::1], '.')
plt.xlabel('z 4')
plt.subplot(13, 10, 7)
plt.plot(input[5::6], output[0::1], '.')
plt.xlabel('z 5')

input = data['inputs']['x_pro'].reshape(-1)
plt.subplot(13, 10, 8)
plt.plot(input[0::1], output[0::1], '.')
plt.xlabel('x_pro')

input = data['inputs']['x_str'].reshape(-1)
plt.subplot(13, 10, 9)
plt.plot(input[0::2], output[0::1], '.')
plt.xlabel('x_str 0')
plt.subplot(13, 10, 10)
plt.plot(input[1::2], output[0::1], '.')
plt.xlabel('x_str 1')


output = data['outputs']['con1_esf'].reshape(-1)

input = data['inputs']['x_aer'].reshape(-1)
plt.subplot(13, 10, 11)
plt.plot(input[0::1], output[0::1], '.')
plt.ylabel('con1_esf')
plt.xlabel('x_aer')

input = data['inputs']['z'].reshape(-1)
plt.subplot(13, 10, 12)
plt.plot(input[0::6], output[0::1], '.')
plt.xlabel('z 0')
plt.subplot(13, 10, 13)
plt.plot(input[1::6], output[0::1], '.')
plt.xlabel('z 1')
plt.subplot(13, 10, 14)
plt.plot(input[2::6], output[0::1], '.')
plt.xlabel('z 2')
plt.subplot(13, 10, 15)
plt.plot(input[3::6], output[0::1], '.')
plt.xlabel('z 3')
plt.subplot(13, 10, 16)
plt.plot(input[4::6], output[0::1], '.')
plt.xlabel('z 4')
plt.subplot(13, 10, 17)
plt.plot(input[5::6], output[0::1], '.')
plt.xlabel('z 5')

input = data['inputs']['x_pro'].reshape(-1)
plt.subplot(13, 10, 18)
plt.plot(input[0::1], output[0::1], '.')
plt.xlabel('x_pro')

input = data['inputs']['x_str'].reshape(-1)
plt.subplot(13, 10, 19)
plt.plot(input[0::2], output[0::1], '.')
plt.xlabel('x_str 0')
plt.subplot(13, 10, 20)
plt.plot(input[1::2], output[0::1], '.')
plt.xlabel('x_str 1')


output = data['outputs']['con2_esf'].reshape(-1)

input = data['inputs']['x_aer'].reshape(-1)
plt.subplot(13, 10, 21)
plt.plot(input[0::1], output[0::1], '.')
plt.ylabel('con2_esf')
plt.xlabel('x_aer')

input = data['inputs']['z'].reshape(-1)
plt.subplot(13, 10, 22)
plt.plot(input[0::6], output[0::1], '.')
plt.xlabel('z 0')
plt.subplot(13, 10, 23)
plt.plot(input[1::6], output[0::1], '.')
plt.xlabel('z 1')
plt.subplot(13, 10, 24)
plt.plot(input[2::6], output[0::1], '.')
plt.xlabel('z 2')
plt.subplot(13, 10, 25)
plt.plot(input[3::6], output[0::1], '.')
plt.xlabel('z 3')
plt.subplot(13, 10, 26)
plt.plot(input[4::6], output[0::1], '.')
plt.xlabel('z 4')
plt.subplot(13, 10, 27)
plt.plot(input[5::6], output[0::1], '.')
plt.xlabel('z 5')

input = data['inputs']['x_pro'].reshape(-1)
plt.subplot(13, 10, 28)
plt.plot(input[0::1], output[0::1], '.')
plt.xlabel('x_pro')

input = data['inputs']['x_str'].reshape(-1)
plt.subplot(13, 10, 29)
plt.plot(input[0::2], output[0::1], '.')
plt.xlabel('x_str 0')
plt.subplot(13, 10, 30)
plt.plot(input[1::2], output[0::1], '.')
plt.xlabel('x_str 1')


output = data['outputs']['con_dpdx'].reshape(-1)

input = data['inputs']['x_aer'].reshape(-1)
plt.subplot(13, 10, 31)
plt.plot(input[0::1], output[0::1], '.')
plt.ylabel('con_dpdx')
plt.xlabel('x_aer')

input = data['inputs']['z'].reshape(-1)
plt.subplot(13, 10, 32)
plt.plot(input[0::6], output[0::1], '.')
plt.xlabel('z 0')
plt.subplot(13, 10, 33)
plt.plot(input[1::6], output[0::1], '.')
plt.xlabel('z 1')
plt.subplot(13, 10, 34)
plt.plot(input[2::6], output[0::1], '.')
plt.xlabel('z 2')
plt.subplot(13, 10, 35)
plt.plot(input[3::6], output[0::1], '.')
plt.xlabel('z 3')
plt.subplot(13, 10, 36)
plt.plot(input[4::6], output[0::1], '.')
plt.xlabel('z 4')
plt.subplot(13, 10, 37)
plt.plot(input[5::6], output[0::1], '.')
plt.xlabel('z 5')

input = data['inputs']['x_pro'].reshape(-1)
plt.subplot(13, 10, 38)
plt.plot(input[0::1], output[0::1], '.')
plt.xlabel('x_pro')

input = data['inputs']['x_str'].reshape(-1)
plt.subplot(13, 10, 39)
plt.plot(input[0::2], output[0::1], '.')
plt.xlabel('x_str 0')
plt.subplot(13, 10, 40)
plt.plot(input[1::2], output[0::1], '.')
plt.xlabel('x_str 1')


output = data['outputs']['con_dt'].reshape(-1)

input = data['inputs']['x_aer'].reshape(-1)
plt.subplot(13, 10, 41)
plt.plot(input[0::1], output[0::1], '.')
plt.ylabel('con_dt')
plt.xlabel('x_aer')

input = data['inputs']['z'].reshape(-1)
plt.subplot(13, 10, 42)
plt.plot(input[0::6], output[0::1], '.')
plt.xlabel('z 0')
plt.subplot(13, 10, 43)
plt.plot(input[1::6], output[0::1], '.')
plt.xlabel('z 1')
plt.subplot(13, 10, 44)
plt.plot(input[2::6], output[0::1], '.')
plt.xlabel('z 2')
plt.subplot(13, 10, 45)
plt.plot(input[3::6], output[0::1], '.')
plt.xlabel('z 3')
plt.subplot(13, 10, 46)
plt.plot(input[4::6], output[0::1], '.')
plt.xlabel('z 4')
plt.subplot(13, 10, 47)
plt.plot(input[5::6], output[0::1], '.')
plt.xlabel('z 5')

input = data['inputs']['x_pro'].reshape(-1)
plt.subplot(13, 10, 48)
plt.plot(input[0::1], output[0::1], '.')
plt.xlabel('x_pro')

input = data['inputs']['x_str'].reshape(-1)
plt.subplot(13, 10, 49)
plt.plot(input[0::2], output[0::1], '.')
plt.xlabel('x_str 0')
plt.subplot(13, 10, 50)
plt.plot(input[1::2], output[0::1], '.')
plt.xlabel('x_str 1')


output = data['outputs']['con_sigma1'].reshape(-1)

input = data['inputs']['x_aer'].reshape(-1)
plt.subplot(13, 10, 51)
plt.plot(input[0::1], output[0::1], '.')
plt.ylabel('con_sigma1')
plt.xlabel('x_aer')

input = data['inputs']['z'].reshape(-1)
plt.subplot(13, 10, 52)
plt.plot(input[0::6], output[0::1], '.')
plt.xlabel('z 0')
plt.subplot(13, 10, 53)
plt.plot(input[1::6], output[0::1], '.')
plt.xlabel('z 1')
plt.subplot(13, 10, 54)
plt.plot(input[2::6], output[0::1], '.')
plt.xlabel('z 2')
plt.subplot(13, 10, 55)
plt.plot(input[3::6], output[0::1], '.')
plt.xlabel('z 3')
plt.subplot(13, 10, 56)
plt.plot(input[4::6], output[0::1], '.')
plt.xlabel('z 4')
plt.subplot(13, 10, 57)
plt.plot(input[5::6], output[0::1], '.')
plt.xlabel('z 5')

input = data['inputs']['x_pro'].reshape(-1)
plt.subplot(13, 10, 58)
plt.plot(input[0::1], output[0::1], '.')
plt.xlabel('x_pro')

input = data['inputs']['x_str'].reshape(-1)
plt.subplot(13, 10, 59)
plt.plot(input[0::2], output[0::1], '.')
plt.xlabel('x_str 0')
plt.subplot(13, 10, 60)
plt.plot(input[1::2], output[0::1], '.')
plt.xlabel('x_str 1')


output = data['outputs']['con_sigma2'].reshape(-1)

input = data['inputs']['x_aer'].reshape(-1)
plt.subplot(13, 10, 61)
plt.plot(input[0::1], output[0::1], '.')
plt.ylabel('con_sigma2')
plt.xlabel('x_aer')

input = data['inputs']['z'].reshape(-1)
plt.subplot(13, 10, 62)
plt.plot(input[0::6], output[0::1], '.')
plt.xlabel('z 0')
plt.subplot(13, 10, 63)
plt.plot(input[1::6], output[0::1], '.')
plt.xlabel('z 1')
plt.subplot(13, 10, 64)
plt.plot(input[2::6], output[0::1], '.')
plt.xlabel('z 2')
plt.subplot(13, 10, 65)
plt.plot(input[3::6], output[0::1], '.')
plt.xlabel('z 3')
plt.subplot(13, 10, 66)
plt.plot(input[4::6], output[0::1], '.')
plt.xlabel('z 4')
plt.subplot(13, 10, 67)
plt.plot(input[5::6], output[0::1], '.')
plt.xlabel('z 5')

input = data['inputs']['x_pro'].reshape(-1)
plt.subplot(13, 10, 68)
plt.plot(input[0::1], output[0::1], '.')
plt.xlabel('x_pro')

input = data['inputs']['x_str'].reshape(-1)
plt.subplot(13, 10, 69)
plt.plot(input[0::2], output[0::1], '.')
plt.xlabel('x_str 0')
plt.subplot(13, 10, 70)
plt.plot(input[1::2], output[0::1], '.')
plt.xlabel('x_str 1')


output = data['outputs']['con_sigma3'].reshape(-1)

input = data['inputs']['x_aer'].reshape(-1)
plt.subplot(13, 10, 71)
plt.plot(input[0::1], output[0::1], '.')
plt.ylabel('con_sigma3')
plt.xlabel('x_aer')

input = data['inputs']['z'].reshape(-1)
plt.subplot(13, 10, 72)
plt.plot(input[0::6], output[0::1], '.')
plt.xlabel('z 0')
plt.subplot(13, 10, 73)
plt.plot(input[1::6], output[0::1], '.')
plt.xlabel('z 1')
plt.subplot(13, 10, 74)
plt.plot(input[2::6], output[0::1], '.')
plt.xlabel('z 2')
plt.subplot(13, 10, 75)
plt.plot(input[3::6], output[0::1], '.')
plt.xlabel('z 3')
plt.subplot(13, 10, 76)
plt.plot(input[4::6], output[0::1], '.')
plt.xlabel('z 4')
plt.subplot(13, 10, 77)
plt.plot(input[5::6], output[0::1], '.')
plt.xlabel('z 5')

input = data['inputs']['x_pro'].reshape(-1)
plt.subplot(13, 10, 78)
plt.plot(input[0::1], output[0::1], '.')
plt.xlabel('x_pro')

input = data['inputs']['x_str'].reshape(-1)
plt.subplot(13, 10, 79)
plt.plot(input[0::2], output[0::1], '.')
plt.xlabel('x_str 0')
plt.subplot(13, 10, 80)
plt.plot(input[1::2], output[0::1], '.')
plt.xlabel('x_str 1')


output = data['outputs']['con_sigma4'].reshape(-1)

input = data['inputs']['x_aer'].reshape(-1)
plt.subplot(13, 10, 81)
plt.plot(input[0::1], output[0::1], '.')
plt.ylabel('con_sigma4')
plt.xlabel('x_aer')

input = data['inputs']['z'].reshape(-1)
plt.subplot(13, 10, 82)
plt.plot(input[0::6], output[0::1], '.')
plt.xlabel('z 0')
plt.subplot(13, 10, 83)
plt.plot(input[1::6], output[0::1], '.')
plt.xlabel('z 1')
plt.subplot(13, 10, 84)
plt.plot(input[2::6], output[0::1], '.')
plt.xlabel('z 2')
plt.subplot(13, 10, 85)
plt.plot(input[3::6], output[0::1], '.')
plt.xlabel('z 3')
plt.subplot(13, 10, 86)
plt.plot(input[4::6], output[0::1], '.')
plt.xlabel('z 4')
plt.subplot(13, 10, 87)
plt.plot(input[5::6], output[0::1], '.')
plt.xlabel('z 5')

input = data['inputs']['x_pro'].reshape(-1)
plt.subplot(13, 10, 88)
plt.plot(input[0::1], output[0::1], '.')
plt.xlabel('x_pro')

input = data['inputs']['x_str'].reshape(-1)
plt.subplot(13, 10, 89)
plt.plot(input[0::2], output[0::1], '.')
plt.xlabel('x_str 0')
plt.subplot(13, 10, 90)
plt.plot(input[1::2], output[0::1], '.')
plt.xlabel('x_str 1')


output = data['outputs']['con_sigma5'].reshape(-1)

input = data['inputs']['x_aer'].reshape(-1)
plt.subplot(13, 10, 91)
plt.plot(input[0::1], output[0::1], '.')
plt.ylabel('con_sigma5')
plt.xlabel('x_aer')

input = data['inputs']['z'].reshape(-1)
plt.subplot(13, 10, 92)
plt.plot(input[0::6], output[0::1], '.')
plt.xlabel('z 0')
plt.subplot(13, 10, 93)
plt.plot(input[1::6], output[0::1], '.')
plt.xlabel('z 1')
plt.subplot(13, 10, 94)
plt.plot(input[2::6], output[0::1], '.')
plt.xlabel('z 2')
plt.subplot(13, 10, 95)
plt.plot(input[3::6], output[0::1], '.')
plt.xlabel('z 3')
plt.subplot(13, 10, 96)
plt.plot(input[4::6], output[0::1], '.')
plt.xlabel('z 4')
plt.subplot(13, 10, 97)
plt.plot(input[5::6], output[0::1], '.')
plt.xlabel('z 5')

input = data['inputs']['x_pro'].reshape(-1)
plt.subplot(13, 10, 98)
plt.plot(input[0::1], output[0::1], '.')
plt.xlabel('x_pro')

input = data['inputs']['x_str'].reshape(-1)
plt.subplot(13, 10, 99)
plt.plot(input[0::2], output[0::1], '.')
plt.xlabel('x_str 0')
plt.subplot(13, 10, 100)
plt.plot(input[1::2], output[0::1], '.')
plt.xlabel('x_str 1')


output = data['outputs']['con_temp'].reshape(-1)

input = data['inputs']['x_aer'].reshape(-1)
plt.subplot(13, 10, 101)
plt.plot(input[0::1], output[0::1], '.')
plt.ylabel('con_temp')
plt.xlabel('x_aer')

input = data['inputs']['z'].reshape(-1)
plt.subplot(13, 10, 102)
plt.plot(input[0::6], output[0::1], '.')
plt.xlabel('z 0')
plt.subplot(13, 10, 103)
plt.plot(input[1::6], output[0::1], '.')
plt.xlabel('z 1')
plt.subplot(13, 10, 104)
plt.plot(input[2::6], output[0::1], '.')
plt.xlabel('z 2')
plt.subplot(13, 10, 105)
plt.plot(input[3::6], output[0::1], '.')
plt.xlabel('z 3')
plt.subplot(13, 10, 106)
plt.plot(input[4::6], output[0::1], '.')
plt.xlabel('z 4')
plt.subplot(13, 10, 107)
plt.plot(input[5::6], output[0::1], '.')
plt.xlabel('z 5')

input = data['inputs']['x_pro'].reshape(-1)
plt.subplot(13, 10, 108)
plt.plot(input[0::1], output[0::1], '.')
plt.xlabel('x_pro')

input = data['inputs']['x_str'].reshape(-1)
plt.subplot(13, 10, 109)
plt.plot(input[0::2], output[0::1], '.')
plt.xlabel('x_str 0')
plt.subplot(13, 10, 110)
plt.plot(input[1::2], output[0::1], '.')
plt.xlabel('x_str 1')


output = data['outputs']['con_theta_low'].reshape(-1)

input = data['inputs']['x_aer'].reshape(-1)
plt.subplot(13, 10, 111)
plt.plot(input[0::1], output[0::1], '.')
plt.ylabel('con_theta_low')
plt.xlabel('x_aer')

input = data['inputs']['z'].reshape(-1)
plt.subplot(13, 10, 112)
plt.plot(input[0::6], output[0::1], '.')
plt.xlabel('z 0')
plt.subplot(13, 10, 113)
plt.plot(input[1::6], output[0::1], '.')
plt.xlabel('z 1')
plt.subplot(13, 10, 114)
plt.plot(input[2::6], output[0::1], '.')
plt.xlabel('z 2')
plt.subplot(13, 10, 115)
plt.plot(input[3::6], output[0::1], '.')
plt.xlabel('z 3')
plt.subplot(13, 10, 116)
plt.plot(input[4::6], output[0::1], '.')
plt.xlabel('z 4')
plt.subplot(13, 10, 117)
plt.plot(input[5::6], output[0::1], '.')
plt.xlabel('z 5')

input = data['inputs']['x_pro'].reshape(-1)
plt.subplot(13, 10, 118)
plt.plot(input[0::1], output[0::1], '.')
plt.xlabel('x_pro')

input = data['inputs']['x_str'].reshape(-1)
plt.subplot(13, 10, 119)
plt.plot(input[0::2], output[0::1], '.')
plt.xlabel('x_str 0')
plt.subplot(13, 10, 120)
plt.plot(input[1::2], output[0::1], '.')
plt.xlabel('x_str 1')


output = data['outputs']['con_theta_up'].reshape(-1)

input = data['inputs']['x_aer'].reshape(-1)
plt.subplot(13, 10, 121)
plt.plot(input[0::1], output[0::1], '.')
plt.ylabel('con_theta_up')
plt.xlabel('x_aer')

input = data['inputs']['z'].reshape(-1)
plt.subplot(13, 10, 122)
plt.plot(input[0::6], output[0::1], '.')
plt.xlabel('z 0')
plt.subplot(13, 10, 123)
plt.plot(input[1::6], output[0::1], '.')
plt.xlabel('z 1')
plt.subplot(13, 10, 124)
plt.plot(input[2::6], output[0::1], '.')
plt.xlabel('z 2')
plt.subplot(13, 10, 125)
plt.plot(input[3::6], output[0::1], '.')
plt.xlabel('z 3')
plt.subplot(13, 10, 126)
plt.plot(input[4::6], output[0::1], '.')
plt.xlabel('z 4')
plt.subplot(13, 10, 127)
plt.plot(input[5::6], output[0::1], '.')
plt.xlabel('z 5')

input = data['inputs']['x_pro'].reshape(-1)
plt.subplot(13, 10, 128)
plt.plot(input[0::1], output[0::1], '.')
plt.xlabel('x_pro')

input = data['inputs']['x_str'].reshape(-1)
plt.subplot(13, 10, 129)
plt.plot(input[0::2], output[0::1], '.')
plt.xlabel('x_str 0')
plt.subplot(13, 10, 130)
plt.plot(input[1::2], output[0::1], '.')
plt.xlabel('x_str 1')

plt.show()
