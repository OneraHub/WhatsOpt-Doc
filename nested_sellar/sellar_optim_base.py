# -*- coding: utf-8 -*-
"""
  sellar_optim_base.py generated by WhatsOpt. 
"""
# DO NOT EDIT unless you know what you are doing
# analysis_id: 151

import numpy as np
from openmdao.api import Problem, Group
from openmdao.api import IndepVarComp
from openmdao.api import NonlinearBlockGS, ScipyKrylov

from sellar.sellar import Sellar

from functions import Functions
from sellar.disc1 import Disc1
from sellar.disc2 import Disc2

class SellarOptimBase(Group):
    """ An OpenMDAO base component to encapsulate SellarOptim MDA """

    def setup(self): 
        indeps = self.add_subsystem('indeps', IndepVarComp(), promotes=['*'])

        indeps.add_output('x', 2.0)
        indeps.add_output('z', [5.0, 2.0])
        self.add_subsystem('Sellar', self.create_sellar(), promotes=['y1', 'x', 'z', 'y2', 'y1', 'x', 'y2', 'z', 'y2', 'y1', 'z'])
        self.add_subsystem('Functions', self.create_functions(), promotes=['x', 'y1', 'y2', 'z', 'f', 'g1', 'g2'])
        self.nonlinear_solver = NonlinearBlockGS() 
        self.linear_solver = ScipyKrylov()


    def create_sellar(self):
    	return Sellar()


    def create_functions(self):
    
    	return Functions()
    


# Used by Thrift server to serve disciplines
class SellarOptimFactoryBase(object):
    @staticmethod
    def create_functions():
    	return Functions()
            
    @staticmethod
    def create_sellar_disc1():
    	return Disc1()
            
    @staticmethod
    def create_sellar_disc2():
    	return Disc2()
            
