# -*- coding: utf-8 -*-
"""
  discipline_proxy.py generated by WhatsOpt. 
"""
from .sellar import Sellar
from .sellar_conversions import *

from disc1_base import Disc1Base
from disc2_base import Disc2Base
from functions_base import FunctionsBase



class Disc1Proxy(Disc1Base):
    def __init__(self, thrift_client):
        super(Disc1Proxy, self).__init__()
        self._thrift_client = thrift_client
        
    def compute(self, inputs, outputs):
        output = self._thrift_client.compute_disc1(to_thrift_disc1_input(inputs))
        to_openmdao_disc1_outputs(output, outputs)

class Disc2Proxy(Disc2Base):
    def __init__(self, thrift_client):
        super(Disc2Proxy, self).__init__()
        self._thrift_client = thrift_client
        
    def compute(self, inputs, outputs):
        output = self._thrift_client.compute_disc2(to_thrift_disc2_input(inputs))
        to_openmdao_disc2_outputs(output, outputs)

class FunctionsProxy(FunctionsBase):
    def __init__(self, thrift_client):
        super(FunctionsProxy, self).__init__()
        self._thrift_client = thrift_client
        
    def compute(self, inputs, outputs):
        output = self._thrift_client.compute_functions(to_thrift_functions_input(inputs))
        to_openmdao_functions_outputs(output, outputs)


    