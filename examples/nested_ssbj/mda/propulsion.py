# -*- coding: utf-8 -*-
"""
  propulsion.py generated by WhatsOpt. 
"""
import numpy as np
from mda.propulsion_base import PropulsionBase
from ssbj_openmdao.ssbj_disciplines.propulsion import Propulsion as PropulsionDiscipline

class Propulsion(PropulsionBase):
    """ An OpenMDAO component to encapsulate Propulsion discipline """
		
    def __init__(self, scalers):
        super(Propulsion, self).__init__()
        # scalers values
        self.propu = PropulsionDiscipline(scalers)

    def setup(self):
        super(Propulsion, self).setup()
        self.declare_partials('*', '*')  

    def compute(self, inputs, outputs):
        """ Propulsion computation """
        self.propu.compute(inputs, outputs)
        
		
    def compute_partials(self, inputs, partials):
        """ Jacobian for Propulsion """
        self.propu.compute_partials(inputs, partials)