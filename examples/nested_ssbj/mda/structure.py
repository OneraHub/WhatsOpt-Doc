# -*- coding: utf-8 -*-
"""
  structure.py generated by WhatsOpt. 
"""
import numpy as np
from mda.structure_base import StructureBase
from ssbj_openmdao.ssbj_disciplines.structure import Structure as StructureDiscipline

class Structure(StructureBase):
    """ An OpenMDAO component to encapsulate Structure discipline """
		
    def __init__(self, scalers):
        super(Structure, self).__init__()
        # scalers values
        self.struct = StructureDiscipline(scalers)
    
    def setup(self):
        super(Structure, self).setup()
        self.declare_partials('*', '*')  

    def compute(self, inputs, outputs):
        """ Structure computation """
        self.struct.compute(inputs, outputs)

    def compute_partials(self, inputs, partials):
        """ Jacobian for Structure """
        self.struct.compute_partials(inputs, partials)
