# -*- coding: utf-8 -*-
"""
  aerodynamics.py generated by WhatsOpt. 
"""
import numpy as np
from mda.aerodynamics_base import AerodynamicsBase
from ssbj_openmdao.ssbj_disciplines.aerodynamics import Aerodynamics as AerodynamicsDiscipline

class Aerodynamics(AerodynamicsBase):
    """ An OpenMDAO component to encapsulate Aerodynamics discipline """
		
    def __init__(self, scalers):
        super(Aerodynamics, self).__init__()
        # scalers values
        self.aero = AerodynamicsDiscipline(scalers)

    def setup(self):
        super(Aerodynamics, self).setup()
        self.declare_partials('*', '*')        

    def compute(self, inputs, outputs):
        """ Aerodynamics computation """
        self.aero.compute(inputs, outputs)
  
    def compute_partials(self, inputs, partials):
        """ Jacobian for Aerodynamics """
        self.aero.compute_partials(inputs, partials)
