# -*- coding: utf-8 -*-
"""
  mda_base.py generated by WhatsOpt. 
"""
# DO NOT EDIT unless you know what you are doing
# analysis_id: 100

import numpy as np
from openmdao.api import Problem, Group
from openmdao.api import IndepVarComp


from mda.structure import Structure
from mda.aerodynamics import Aerodynamics
from mda.propulsion import Propulsion

class MdaBase(Group):
    """ An OpenMDAO base component to encapsulate Mda MDA """

    def setup(self): 

        self.add_subsystem('Structure', self.create_structure(), promotes=['Theta', 'sigma', 'WT', 'L', 'WE', 'x_str', 'z', 'WF'])
        self.add_subsystem('Aerodynamics', self.create_aerodynamics(), promotes=['dpdx', 'ESF', 'Theta', 'WT', 'x_aer', 'z', 'D', 'L', 'fin'])
        self.add_subsystem('Propulsion', self.create_propulsion(), promotes=['DT', 'ESF', 'Temp', 'D', 'x_pro', 'z', 'WE', 'SFC'])

    def create_structure(self):
    
    	return Structure()
    
    def create_aerodynamics(self):
    
    	return Aerodynamics()
    
    def create_propulsion(self):
    
    	return Propulsion()
    


# Used by Thrift server to serve disciplines
class MdaFactoryBase(object):
    @staticmethod
    def create_mda_structure():
    	return Structure()
            
    @staticmethod
    def create_mda_aerodynamics():
    	return Aerodynamics()
            
    @staticmethod
    def create_mda_propulsion():
    	return Propulsion()
            
