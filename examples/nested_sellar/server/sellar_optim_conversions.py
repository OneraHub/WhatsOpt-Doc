# -*- coding: utf-8 -*-
"""
  sellar_optim_conversions.py generated by WhatsOpt. 
"""
import numpy as np
from .sellar_optim.ttypes import *


# Functions 
def to_openmdao_functions_inputs(ins, inputs={}):
    
    inputs['x'] = np.array(ins.x)
    inputs['y1'] = np.array(ins.y1)
    inputs['y2'] = np.array(ins.y2)
    inputs['z'] = np.array(ins.z)
    return inputs

def to_thrift_functions_input(inputs):
    ins = FunctionsInput()
    
    
    ins.x = float(inputs['x'])
    
    
    ins.y1 = float(inputs['y1'])
    
    
    ins.y2 = float(inputs['y2'])
    
    
    ins.z = inputs['z'].tolist()
    
    return ins

def to_openmdao_functions_outputs(output, outputs={}):
    
    outputs['f'] = np.array(output.f)
    outputs['g1'] = np.array(output.g1)
    outputs['g2'] = np.array(output.g2)
    return outputs

def to_thrift_functions_output(outputs):
    output = FunctionsOutput()
    
    
    output.f = float(outputs['f'])
    
    
    output.g1 = float(outputs['g1'])
    
    
    output.g2 = float(outputs['g2'])
    
    return output

# Disc1 
def to_openmdao_sellar_disc1_inputs(ins, inputs={}):
    
    inputs['x'] = np.array(ins.x)
    inputs['y2'] = np.array(ins.y2)
    inputs['z'] = np.array(ins.z)
    return inputs

def to_thrift_sellar_disc1_input(inputs):
    ins = SellarDisc1Input()
    
    
    ins.x = float(inputs['x'])
    
    
    ins.y2 = float(inputs['y2'])
    
    
    ins.z = inputs['z'].tolist()
    
    return ins

def to_openmdao_sellar_disc1_outputs(output, outputs={}):
    
    outputs['y1'] = np.array(output.y1)
    return outputs

def to_thrift_sellar_disc1_output(outputs):
    output = SellarDisc1Output()
    
    
    output.y1 = float(outputs['y1'])
    
    return output

# Disc2 
def to_openmdao_sellar_disc2_inputs(ins, inputs={}):
    
    inputs['y1'] = np.array(ins.y1)
    inputs['z'] = np.array(ins.z)
    return inputs

def to_thrift_sellar_disc2_input(inputs):
    ins = SellarDisc2Input()
    
    
    ins.y1 = float(inputs['y1'])
    
    
    ins.z = inputs['z'].tolist()
    
    return ins

def to_openmdao_sellar_disc2_outputs(output, outputs={}):
    
    outputs['y2'] = np.array(output.y2)
    return outputs

def to_thrift_sellar_disc2_output(outputs):
    output = SellarDisc2Output()
    
    
    output.y2 = float(outputs['y2'])
    
    return output

