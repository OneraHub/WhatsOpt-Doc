# -*- coding: utf-8 -*-
"""
  nested_sellar.py generated by WhatsOpt. 
"""
from optparse import OptionParser
from openmdao.api import Problem
from openmdao.api import NonlinearBlockGS, ScipyKrylov
from openmdao.api import view_model
# from openmdao_extensions.reckless_nonlinear_block_gs import RecklessNonlinearBlockGS
from nested_sellar_base import NestedSellarBase, NestedSellarFactoryBase

class NestedSellar(NestedSellarBase):
    """ An OpenMDAO component to encapsulate NestedSellar analysis """
    def __init__(self, **kwargs):
        super(NestedSellar, self).__init__(**kwargs)

        # self.nonlinear_solver = RecklessNonlinearBlockGS() 
        # self.linear_solver = ScipyKrylov()

    def setup(self):
        super(NestedSellar, self).setup()


class NestedSellarFactory(NestedSellarFactoryBase):
    """ A factory to create disciplines of NestedSellar analysis """
    pass

if __name__ == "__main__":
    parser = OptionParser()
    parser.add_option("-n", "--no-n2", action="store_false", dest='n2_view', default=True, 
                      help="display N2 openmdao viewer")
    (options, args) = parser.parse_args()

    problem = Problem()
    problem.model = NestedSellar()

    problem.setup()
    problem.final_setup()
    
    if options.n2_view:
        view_model(problem)
    