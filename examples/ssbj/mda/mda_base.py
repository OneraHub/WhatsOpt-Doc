# -*- coding: utf-8 -*-
"""
  mda_base.py generated by WhatsOpt. 
"""
# DO NOT EDIT unless you know what you are doing
# analysis_id: 3

import numpy as np
from openmdao.api import Problem, Group, ParallelGroup, IndepVarComp
from openmdao.api import NonlinearBlockGS, ScipyKrylov
from openmdao.api import view_model
from openmdao_extensions.reckless_nonlinear_block_gs import RecklessNonlinearBlockGS

from mda.structure import Structure
from mda.aerodynamics import Aerodynamics
from mda.propulsion import Propulsion

class MdaBase(Group):
    """ An OpenMDAO base component to encapsulate Mda MDA """
    def __init__(self, thrift_client=None, **kwargs):
        super(MdaBase, self). __init__(**kwargs)

        self.nonlinear_solver = NonlinearBlockGS() 
        self.nonlinear_solver.options['atol'] = 1.0e-3
        self.linear_solver = ScipyKrylov()

    def setup(self): 

        self.add_subsystem('Structure', self.create_structure(), promotes=['Theta', 'sigma', 'WT', 'L', 'WE', 'x_str', 'z', 'WF'])
        self.add_subsystem('Aerodynamics', self.create_aerodynamics(), promotes=['dpdx', 'ESF', 'Theta', 'WT', 'x_aer', 'z', 'D', 'L', 'fin'])
        self.add_subsystem('Propulsion', self.create_propulsion(), promotes=['DT', 'ESF', 'Temp', 'D', 'x_pro', 'z', 'WE', 'SFC'])

            
